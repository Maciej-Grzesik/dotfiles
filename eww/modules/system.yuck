(defpoll gpu_percent :interval "3s" "nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits 2>/dev/null || echo 0")
(defpoll time
  :initial `{"date": "6/9", "hour": "0", "minute": "0", "monthname": "Month", "day": "Not monday", "year": "2077"}`
  :interval "5s"
  `date +'{"date": "%d/%m", "hour": "%H", "minute": "%M", "monthname": "%B", "day": "%A", "year": "%Y"}'`
)
(deflisten net :initial `{ "essid": "lo", "icon": "Û∞§Ø", "level": "0" }` "scripts/net")
(defvar WIFI_ICONS `["Û∞§Ø", "Û∞§ü", "Û∞§¢", "Û∞§•", "Û∞§®"]`)
(deflisten bluetooth :initial `{"icon": "Û∞Ç≤","batt_icon":"","text":"Bluetooth off"}` "scripts/bluetooth")



(defwidget system_info []
  (box
    :space-evenly false :spacing -3 :width 50
    :orientation "v"
    :valign "center"
    :class "system-info"
    (box
      :space-evenly false :orientation "h" :spacing 5
      (label
        :class "bar-resources-icon bar-txt-norm"
        :text "Û∞òö"
      )
      (progress
        :valign "center"
        :class "bar-prog memory"
        :value {EWW_RAM.used_mem_perc}
      )
    )
    (box
      :space-evenly false :orientation "h" :spacing 5
      (label
        :class "bar-resources-icon bar-txt-norm"
        :text "Û∞çõ"
      )
      (progress
        :valign "center"
        :class "bar-prog cpu"
        :value {EWW_CPU.avg}
      )
    )
    (box
      :space-evenly false :orientation "h" :spacing 5
      (label
        :class "bar-resources-icon-gpu bar-txt-norm"
        :text "Û∞çπ"
      )
      (progress
        :valign "center"
        :class "bar-prog gpu"
        :value gpu_percent
      )
    )
  )
)

(defwidget wifi_widget []
  (box
    :space-evenly false :orientation "h" :spacing 5
    :class "wifi-box"
    (label
      :valign "center"
      :class "bar-icon-material bar-system-icon bar-txt-norm"
      :text {WIFI_ICONS[net.level]}
    )
    
  )
)

(defwidget bluetooth_widget []
  (box
    :space-evenly false :orientation "v" :spacing 0
    :class "bluetooth-box"
    :valign "start"
    (label
      :valign "center"
      :angle -90
      :class "bluetooth-text-small"
      :text "${bluetooth.batt_icon}"
    )
    (label
      :valign "center"
      :class "bluetooth-text-norm"
      :text {bluetooth.icon}
    )
  )
)

(defwidget system_widget [monitor]
  (box :space-evenly false :orientation "h" :style "margin-right: 10px;"
    ; (eventbox
      ;   :onclick "eww open calendar_win --arg monitor=${monitor} && sleep 0.1 && eww update open_calendar=true"
      ;   (box
        ;     :space-evenly false :orientation "v"
        ;     :valign "center"
        ;     :hexpand true
        ;     :class "time-box"
        ;     (label :xalign 0 :class "bar-txt-larger clr-accent"
          ;       :text "${time.hour}:${time.minute}"
        ;     )
        ;     (label :xalign 0 :class "bar-txt-smaller clr-accent"
          ;       :text "${time.day}, ${time.date}"
        ;     )
      ;   )
    ; )
    (box
      :space-evenly false :orientation "v"
      :valign "center"
      :hexpand true
      :class "time-box"
      (label :xalign 0 :class "bar-txt-larger clr-accent"
        :text "${time.hour}:${time.minute}"
      )
      (label :xalign 0 :class "bar-txt-smaller clr-accent"
        :text "${time.day}, ${time.date}"
      )
    )
    ; (label :width 60 :text "üîä ${volume}%")
    
    (wifi_widget)
    (bluetooth_widget)
    (system_info)
    (power_widget)
  )
)